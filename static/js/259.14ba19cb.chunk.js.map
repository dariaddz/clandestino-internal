{"version":3,"file":"static/js/259.14ba19cb.chunk.js","mappings":"oMAEMA,GAAcC,E,QAAAA,IAAY,CAC9BC,KAAM,SACNC,aAAc,CACZC,MAAO,IAETC,SAAU,CACRC,aAAY,SAACC,EAAOC,GAClBD,EAAMH,MAAQI,EAAOC,OACvB,KAKWH,GADAN,EAAmB,QACFA,EAAYU,QAA7BJ,c,UCdf,EAAyB,uB,mBCWV,SAASK,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAI,CACHC,MAAO,CACLC,gBAAgB,GAAD,OAAKC,EAAAA,EAAAA,aAEpBC,YAAa,OACbC,aAAc,QACd,UAEF,6BACE,SAAC,KAAS,2GACV,SAAC,KAAU,CACTC,KAAK,OACLjB,KAAK,SACLkB,GAAG,SACHC,UAAWC,EACXC,YAAY,sDACZC,SArBa,SAAAC,GACnBb,EAASN,EAAamB,EAAEC,OAAOtB,OACjC,QA4BF,CC5CA,MAA2B,4B,UCcZ,SAASuB,IACtB,OAA6BC,EAAAA,EAAAA,MAArBC,EAAI,EAAJA,KAAMC,EAAU,EAAVA,WACRC,GAAcC,EAAAA,EAAAA,KAAY,SAAAzB,GAAK,OAAIA,EAAMH,KAAK,IACpD6B,QAAQC,IAAI,uBAAwBL,GAEpC,IAAMM,EAAuB,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,QAAO,YAAY,SAATC,UAC7BC,cAAcC,SAASR,EAAYO,cAAc,IAM7D,OAFAL,QAAQC,IAAI,aAAcJ,IAGxB,gCACGA,IAAeD,IAAQ,sHACP,OAAhBM,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBK,KACjB,SAAAC,GAAS,OACe,IAAtBA,EAAUC,UACR,UAAC,KAAK,YACJ,SAAC,KAAS,UAAED,EAAUJ,aACtB,UAAC,KAAU,WACRI,EAAUE,MAAMC,OAAS,IACxB,SAAC,KAAW,CAACvB,UAAWC,EAAW,4CAEpCmB,EAAUI,MAAMD,OAAS,IACxB,SAAC,KAAW,CAACvB,UAAWC,EAAW,sCAGpCmB,EAAUK,MAAMF,OAAS,IACxB,SAAC,KAAW,CAACvB,UAAWC,EAAW,gDAGvC,UAAC,KAAS,YACR,SAAC,KAAS,WACR,2BACE,qCACA,qCACA,0CAGJ,SAAC,KAAQ,WACP,2BACE,qCACA,qCACA,0CAGJ,SAAC,KAAS,WACR,2BACE,qCACA,qCACA,8CAjCImB,EAAUrB,GAsCvB,MAIX,CC1Ee,SAAS2B,IACtB,OACE,SAAC,KAAW,CAACjC,MAAO,CAAEkC,MAAO,QAASC,OAAQ,SAAU,gFAI5D,CCUe,SAASC,IACtB,OACE,UAAC,KAAI,YACH,SAAC,KAAI,WACH,SAACvB,EAAS,OAGZ,SAACoB,EAAQ,MAGf,C,cCpBe,SAASI,KACLC,EAAAA,EAAAA,OACEpB,EAAAA,EAAAA,KAAY,SAAAzB,GAAK,OAAIA,EAAM8C,MAAMC,UAAU,IAO9D,OACE,iCACE,SAAC3C,EAAM,KACP,SAACuC,EAAS,MAGhB,C","sources":["redux/filterSlice.js","webpack://clandestino-internal/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://clandestino-internal/./src/components/MisicItem/MusicItem.module.css?cf39","components/MisicItem/MusicItem.js","components/LoadMore/LoadMore.js","components/MusicList/MusicList.js","pages/MusicPage/MusicPage.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState: {\r\n    value: '',\r\n  },\r\n  reducers: {\r\n    changeFilter(state, action) {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport default filterSlice.reducer;\r\nexport const { changeFilter } = filterSlice.actions;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"Filter_search__WGt40\"};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/filterSlice';\r\nimport color from '../../fonts-colors/colors';\r\nimport s from './Filter.module.css';\r\n\r\nimport {\r\n  SearchForm,\r\n  Page,\r\n  FormTitle,\r\n} from '../../fonts-colors/styledComponents';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <Page\r\n      style={{\r\n        backgroundColor: `${color.accentColor}`,\r\n        // paddingTop: ,\r\n        paddingLeft: '10px',\r\n        paddingRight: '10px',\r\n      }}\r\n    >\r\n      <form>\r\n        <FormTitle>Найти композицию</FormTitle>\r\n        <SearchForm\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          id=\"filter\"\r\n          className={s.search}\r\n          placeholder=\"Название...\"\r\n          onChange={handleChange}\r\n          // toShow={toShow}\r\n        />\r\n        {/* <button type=\"submit\">найти композицию</button> */}\r\n\r\n        {/* https://www.youtube.com/watch?v=MY6ZZIn93V8 */}\r\n      </form>\r\n    </Page>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mediaBtn\":\"MusicItem_mediaBtn__pnLuX\",\"btnActive\":\"MusicItem_btnActive__C+n9N\"};","import {\r\n  Thumb,\r\n  VideoList,\r\n  NoteList,\r\n  AudioList,\r\n  MediaTypes,\r\n  MediaButton,\r\n  MediaList,\r\n  MusicName,\r\n} from '../../fonts-colors/styledComponents';\r\nimport s from './MusicItem.module.css';\r\n\r\nimport { useGetMusicQuery } from '../../redux/musicApi'; //rtk query\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function MusicItem() {\r\n  const { data, isFetching } = useGetMusicQuery(); //rtk query\r\n  const filterValue = useSelector(state => state.value);\r\n  console.log('music fetch from Api', data);\r\n\r\n  const filteredContacts = data?.filter(({ musicName }) =>\r\n    musicName.toLowerCase().includes(filterValue.toLowerCase())\r\n  );\r\n\r\n  // console.log('music fetch from Api', data);\r\n  console.log('isFetching', isFetching);\r\n\r\n  return (\r\n    <>\r\n      {isFetching && !data && <div>Загружжжжжжаем....</div>}\r\n      {filteredContacts?.map(\r\n        musicItem =>\r\n          musicItem.archive === false && (\r\n            <Thumb key={musicItem.id}>\r\n              <MusicName>{musicItem.musicName}</MusicName>\r\n              <MediaTypes>\r\n                {musicItem.video.length > 0 && (\r\n                  <MediaButton className={s.mediaBtn}>видео</MediaButton>\r\n                )}\r\n                {musicItem.notes.length > 0 && (\r\n                  <MediaButton className={s.mediaBtn}>ноты</MediaButton>\r\n                )}\r\n\r\n                {musicItem.audio.length > 0 && (\r\n                  <MediaButton className={s.mediaBtn}>аудио</MediaButton>\r\n                )}\r\n              </MediaTypes>\r\n              <MediaList>\r\n                <VideoList>\r\n                  <ul>\r\n                    <li>video 1</li>\r\n                    <li>video 2</li>\r\n                    <li>video 3</li>\r\n                  </ul>\r\n                </VideoList>\r\n                <NoteList>\r\n                  <ul>\r\n                    <li>notes 1</li>\r\n                    <li>notes 2</li>\r\n                    <li>notes 3</li>\r\n                  </ul>\r\n                </NoteList>\r\n                <AudioList>\r\n                  <ul>\r\n                    <li>audio 1</li>\r\n                    <li>audio 2</li>\r\n                    <li>audio 3</li>\r\n                  </ul>\r\n                </AudioList>\r\n              </MediaList>\r\n            </Thumb>\r\n          )\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { MediaButton } from '../../fonts-colors/styledComponents';\r\nexport default function LoadMore() {\r\n  return (\r\n    <MediaButton style={{ width: '100px', height: '100px' }}>\r\n      Показать еще\r\n    </MediaButton>\r\n  );\r\n}\r\n","import {\r\n  Page,\r\n  //   Thumb,\r\n  //   VideoList,\r\n  //   NoteList,\r\n  //   AudioList,\r\n  //   MediaTypes,\r\n  //   MediaButton,\r\n  //   MediaList,\r\n  //   MusicName,\r\n} from '../../fonts-colors/styledComponents';\r\n// import s from './MusicItem.module.css';\r\n\r\nimport MusicItem from '../../components/MisicItem';\r\nimport LoadMore from '../../components/LoadMore';\r\n// import music from '../../music.json';\r\n\r\nexport default function MusicList() {\r\n  return (\r\n    <Page>\r\n      <Page>\r\n        <MusicItem />\r\n      </Page>\r\n      {/* //isFetching */}\r\n      <LoadMore />\r\n    </Page>\r\n  );\r\n}\r\n","import Filter from '../../components/Filter';\r\nimport MusicList from '../../components/MusicList/MusicList';\r\n\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function MusicPage() {\r\n  const navigate = useNavigate();\r\n  const isLoggedIn = useSelector(state => state.users.isLoggedIn);\r\n\r\n  // useEffect(() => {\r\n  //   if (!isLoggedIn) {\r\n  //     navigate('/login');\r\n  //   }\r\n  // }, [isLoggedIn, navigate]);\r\n  return (\r\n    <>\r\n      <Filter />\r\n      <MusicList />\r\n    </>\r\n  );\r\n}\r\n"],"names":["filterSlice","createSlice","name","initialState","value","reducers","changeFilter","state","action","payload","actions","Filter","dispatch","useDispatch","style","backgroundColor","color","paddingLeft","paddingRight","type","id","className","s","placeholder","onChange","e","target","MusicItem","useGetMusicQuery","data","isFetching","filterValue","useSelector","console","log","filteredContacts","filter","musicName","toLowerCase","includes","map","musicItem","archive","video","length","notes","audio","LoadMore","width","height","MusicList","MusicPage","useNavigate","users","isLoggedIn"],"sourceRoot":""}